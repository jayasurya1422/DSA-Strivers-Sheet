Binary Tree Postorder Traversal

Given the root of a binary tree, return the postorder traversal of its nodes' values.

Example 1:

Input: root = [1,null,2,3]

Output: [3,2,1]

Explanation:

Code :

class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        Stack<TreeNode> st1=new Stack<>();
        Stack<TreeNode> st2=new Stack<>();
        List<Integer> arr=new ArrayList<>();
        if(root==null){
            return arr;
        }
        st1.push(root);
        while(!st1.isEmpty()){
            TreeNode cur=st1.pop();
            st2.push(cur);
            if(cur.left!=null){
                st1.push(cur.left);
            }
            if(cur.right!=null){
                st1.push(cur.right);
            }
        }
        while(!st2.isEmpty()){
            arr.add(st2.pop().val);
        }
        return arr;
    }
}

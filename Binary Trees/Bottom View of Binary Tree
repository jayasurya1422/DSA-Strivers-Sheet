class Solution
{
    //Function to return a list containing the bottom view of the given tree.
    static class Pair{
        Node node;
        int hd;
        Pair(Node node,int hd){
            this.node=node;
            this.hd=hd;
        }
    }
    public ArrayList <Integer> bottomView(Node root)
    {
        // Code here
        ArrayList<Integer> arr=new ArrayList<>();
        if(root==null){
            return arr;
        }
        TreeMap<Integer,Integer> h=new TreeMap<>();
        Queue<Pair> q=new LinkedList<>();
        q.add(new Pair(root,0));
        while(!q.isEmpty()){
            Pair pair=q.poll();
            Node node=pair.node;
            int vline=pair.hd;
                h.put(vline,node.data);
            if(node.left!=null){
                q.add(new Pair(node.left,vline-1));
            }
            if(node.right!=null){
                q.add(new Pair(node.right,vline+1));
            }
            
        }
        arr.addAll(h.values());
        return arr;
    }
}
